---
import { parse } from "path";
import Layout from "../../components/Layout.astro";
import coffees from "../../constants/coffees.json";
import CoffeeBeansSvg from "../../svg/coffeeBeans.svg";

export type Coffee = {
  id: number;
  country: string;
  flag_emoji: string;
  name: string;
  notes: string[];
  process: string;
  producer: string;
  farm?: string;
  region: string;
  roaster: {
    location: string;
    name: string;
    url: string;
  };
  variety: string;
  harvest_year: string;
  elevation?: string;
};

export function getStaticPaths() {
  return coffees.map((coffee) => {
    return {
      params: {
        id: coffee.id,
      },
    };
  });
}

const { id } = Astro.params;

const coffee = coffees[parseInt(id!, 10) - 1];

const {
  name,
  producer,
  farm,
  region,
  country,
  flag_emoji,
  roaster,
  variety,
  process,
  harvest_year,
  elevation,
} = coffee;

export const prerender = true;
---

<Layout title="John the Dev">
  <main
    class="relative flex h-full w-full max-w-5xl flex-col items-center justify-center gap-4 p-4"
  >
    <div
      transition:name="coffees-header"
      class="flex flex-row items-center justify-center gap-1 self-center p-2 text-lg sm:self-start"
    >
      <p>&larr;</p>
      <a href={`/coffee#${id}`} class="hover:underline"> Coffee</a>
      <div
        class="flex h-6 w-6 rounded-full bg-[#d63031]"
        transition:name="coffees-icon"
      >
        <img
          src={CoffeeBeansSvg.src}
          class="m-auto h-full w-full place-self-center"
        />
      </div>
    </div>
    <section
      class="relative flex w-full flex-col items-start justify-start gap-2 overflow-hidden rounded-xl rounded-tr-none border border-slate-500 bg-slate-700 p-4 text-left md:gap-4"
      transition:name={`coffee-container-${id}`}
    >
      <h2
        class="absolute right-0 top-0 w-full border-b border-b-slate-500 border-l-slate-500 bg-slate-900 p-2 text-center text-base text-slate-300 md:w-auto md:rounded-bl-xl md:border-l md:p-3 md:text-xl"
      >
        {region},
        <span>
          {country}
        </span>
        <span transition:name={`coffee-flag-${id}`}>{` ${flag_emoji}`}</span>
      </h2>
      <div class="flex w-full flex-wrap items-center justify-between gap-4">
        <h1
          class="w-full pt-8 text-center text-3xl font-bold md:pt-0 md:text-left md:text-4xl"
          transition:name={`coffee-name-${id}`}
        >
          {name}
        </h1>
      </div>
      <p class="text-lg">
        <strong>{variety}</strong> variety
      </p>
      <p class="text-lg">
        <strong>{process}</strong> process
      </p>
      {
        elevation ? (
          <p class="text-lg">
            Grown at <strong>{elevation}</strong> meters above sea level
          </p>
        ) : null
      }
      <p class="text-lg">
        Produced by <strong>{producer}</strong>{
          farm ? (
            <Fragment>
              at <strong>{farm}</strong>
            </Fragment>
          ) : null
        }
      </p>
      {
        harvest_year ? (
          <p class="text-lg">
            Harvested in <strong>{harvest_year}</strong>
          </p>
        ) : null
      }
      <p class="text-lg">
        Roasted by <strong
          ><a
            href={roaster.url}
            class="bg-gradient-to-tr from-teal-600 to-green-400 bg-clip-text text-lg font-extrabold text-transparent transition hover:text-green-400 hover:underline"
            target="_blank"
          >
            {roaster.name}
          </a></strong
        > in {roaster.location}
      </p>
      <div class="flex flex-row flex-wrap items-center gap-2">
        <h3 class="text-left text-lg">Tasting Notes:</h3>
        <ul class="flex flex-row flex-wrap gap-2">
          {
            coffee.notes.map((note, index) => {
              const hue = Math.floor(Math.random() * 360);
              const gradient = `linear-gradient(to right, hsl(${hue}, 100%, 50%), hsl(${
                hue + 60
              }, 100%, 50%))`;
              return (
                <li class="rounded-full bg-slate-900 p-2 px-4">
                  <span
                    class="bg-gradient-to-tr bg-clip-text text-base font-extrabold text-transparent sm:text-lg"
                    style={{ backgroundImage: gradient }}
                  >
                    {note}
                  </span>
                </li>
              );
            })
          }
        </ul>
      </div>
    </section>
  </main>
</Layout>
